name: Test Suite

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'config.yaml' # Config changes handled by smoke-test.yml

# Per FR-037a: Explicit least-privilege permissions
permissions:
  contents: read

jobs:
  test:
    name: Run All Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20 # Prevent runaway jobs (normal execution ~7 minutes)
    # Use official Playwright Docker image with pre-installed browsers and system dependencies
    # This eliminates ~3 minutes of system dependency installation per CI run (issue #33)
    # Image variant: 'noble' (Ubuntu 24.04) for latest security patches and Node.js compatibility
    container:
      image: mcr.microsoft.com/playwright:v1.56.1-noble
      # Run as UID 1001 to match GitHub Actions runner user for proper file permissions
      # This prevents permission errors when accessing checked-out code and cache directories
      # Security: Non-root execution per least-privilege principle (FR-037a)
      options: --user 1001

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      # Inline pnpm setup instead of composite action due to container environment
      # Playwright image includes Node.js 22, we just need pnpm and dependency caching
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        # Version is read from package.json "packageManager" field (pnpm@10.17.0)

      - name: Get pnpm store directory
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Validate Playwright version synchronization
        run: |
          # Ensure Docker container version matches package.json to prevent version drift
          PACKAGE_VERSION=$(node -e "console.log(require('./package.json').devDependencies['@playwright/test'].replace('^', '').replace('~', ''))")
          CONTAINER_VERSION="1.56.1"  # Must match container image version above

          if [ "$PACKAGE_VERSION" != "$CONTAINER_VERSION" ]; then
            echo "‚ùå ERROR: Playwright version mismatch detected!"
            echo "   Package.json: @playwright/test ^$PACKAGE_VERSION"
            echo "   Container:    mcr.microsoft.com/playwright:v$CONTAINER_VERSION-noble"
            echo ""
            echo "   Action required: Update container image version in .github/workflows/test.yml line 23"
            echo "   Change 'mcr.microsoft.com/playwright:v$CONTAINER_VERSION-noble' to 'mcr.microsoft.com/playwright:v$PACKAGE_VERSION-noble'"
            exit 1
          fi

          echo "‚úÖ Playwright versions synchronized: v$PACKAGE_VERSION"

      - name: Run type checking
        run: pnpm run type-check
        continue-on-error: false

      - name: Run linting
        run: pnpm run lint
        continue-on-error: false

      - name: Run unit tests
        run: pnpm run test:unit
        continue-on-error: false

      # No Playwright installation needed - browsers and system dependencies
      # are pre-installed in the mcr.microsoft.com/playwright Docker image

      - name: Generate test health data
        run: timeout 90 pnpm run check-once || true
        continue-on-error: false
        env:
          NODE_ENV: test

      - name: Build application
        run: pnpm run build
        continue-on-error: false
        env:
          NODE_ENV: test

      - name: Run e2e tests
        run: pnpm run test:e2e
        continue-on-error: false

      # Accessibility testing is covered by E2E tests (axe-core integration)
      # Standalone accessibility tests directory is empty - uncomment when tests are added
      # - name: Run accessibility tests
      #   run: pnpm run test:accessibility
      #   continue-on-error: false

      # Performance testing directory is empty - uncomment when tests are added
      # - name: Run performance tests
      #   run: pnpm run test:performance
      #   continue-on-error: false

      - name: Run unit, integration, and contract tests with coverage
        run: pnpm run test:coverage
        continue-on-error: false

      - name: Check coverage threshold (80% minimum per FR-040a)
        run: |
          # ‚úÖ Constitutional requirement MET: 80% minimum coverage
          # Current coverage: 90.13% (exceeds target by 10.13%)
          # Achievement date: 2025-10-26 (issue #34 resolved)

          if [ -f coverage/coverage-summary.json ]; then
            COVERAGE=$(node -e "console.log(JSON.parse(require('fs').readFileSync('coverage/coverage-summary.json')).total.lines.pct)")
            echo "üìä Code coverage: ${COVERAGE}%"
            echo "üéØ Constitutional requirement: 80% minimum"

            if (( $(echo "$COVERAGE < 80" | bc -l) )); then
              echo "‚ùå ERROR: Code coverage ${COVERAGE}% is below 80% threshold (FR-040a)"
              echo "   Constitutional Principle III requires 80% minimum coverage"
              exit 1
            fi

            echo "‚úÖ Code coverage ${COVERAGE}% meets 80% constitutional requirement"
            echo "   Exceeds target by $(echo "$COVERAGE - 80" | bc -l)%"
          else
            echo "‚ùå ERROR: Coverage file not found - cannot verify threshold"
            exit 1
          fi

      - name: Upload coverage reports
        uses: actions/upload-artifact@v5
        if: always()
        with:
          name: coverage-reports
          path: coverage/
          retention-days: 30

      - name: Upload Playwright test results
        uses: actions/upload-artifact@v5
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
