/**
 * Eleventy configuration
 * Per T018: Configure GOV.UK Eleventy Plugin for status monitoring
 *
 * @see {@link https://x-govuk.github.io/govuk-eleventy-plugin/}
 * @see {@link https://www.11ty.dev/docs/config/}
 */

import { govukEleventyPlugin } from '@x-govuk/govuk-eleventy-plugin';

export default function (eleventyConfig) {
  // Configure GOV.UK Eleventy Plugin
  eleventyConfig.addPlugin(govukEleventyPlugin, {
    // Header configuration
    header: {
      homepageUrl: '/',
      productName: 'GOV.UK service status', // Per CLAUDE.md requirements
    },

    // Footer configuration
    // Per CLAUDE.md: "No Crown logo until hosted on gov.uk domain"
    footer: {
      copyright: false, // Disable Crown copyright
      licence: 'mit', // MIT license per project LICENSE
    },

    // Page title suffix
    titleSuffix: 'GOV.UK service status',

    // Icons - disabled for self-contained HTML requirement (FR-021)
    // External icon links would violate the no-external-dependencies constraint
    icons: false,

    // Markdown configuration
    markdown: {
      headingPermalinks: false, // No permalink anchors needed for status page
      headingsStartWith: 'xl', // Start with largest heading size
    },

    // Templates - only enable what we need
    // TODO: Re-enable once plugin path resolution is fixed
    templates: {
      error404: false, // Disabled temporarily - template has missing macro dependencies
      sitemap: false, // Disabled temporarily - template has missing macro dependencies
      feed: false, // No RSS feed needed for status page
      searchIndex: false, // No search needed for status page
      tags: false, // Disabled temporarily - template has missing macro dependencies
    },

    // Base URL for canonical URLs in production
    url: process.env.SITE_URL || 'http://localhost:8080',

    // Custom stylesheets (none initially, plugin provides GOV.UK styles)
    stylesheets: [],
  });

  // Passthrough copy for static assets
  // Copy config.yaml to output for transparency
  eleventyConfig.addPassthroughCopy('config.yaml');

  // Copy any custom assets if they exist
  eleventyConfig.addPassthroughCopy({ 'assets/**/*': 'assets' });

  // Copy CSV history file to output
  eleventyConfig.addPassthroughCopy('history.csv');

  // Ignore documentation and specification files (not part of site build)
  eleventyConfig.ignores.add('docs/**');
  eleventyConfig.ignores.add('specs/**');
  eleventyConfig.ignores.add('README.md');
  eleventyConfig.ignores.add('CLAUDE.md');

  // Custom filters for Nunjucks
  // Add selectattr filter for filtering arrays by attribute value
  eleventyConfig.addFilter('selectattr', function (array, attribute, test, value) {
    if (!Array.isArray(array)) {
      return [];
    }
    if (test === 'equalto') {
      return array.filter((item) => item[attribute] === value);
    }
    return array;
  });

  // Global data
  // Health check results will be loaded from _data/health.json
  // (generated by orchestrator before Eleventy build)

  // Configure directory structure
  return {
    // Template formats
    templateFormats: ['md', 'njk', 'html', '11ty.js'],

    // Markdown engine
    markdownTemplateEngine: 'njk',
    htmlTemplateEngine: 'njk',

    // Directory structure per plan.md
    dir: {
      input: '.', // Root directory
      includes: '_includes', // Templates, components, macros
      // layouts defaults to _includes, don't override - let plugin handle layout paths
      data: '_data', // Data files (health.json)
      output: '_site', // Build output (before post-build inlining)
    },

    // Nunjucks environment options
    // Note: Plugin handles Nunjucks paths automatically via setLibrary('njk')
    nunjucksEnvironmentOptions: {
      lstripBlocks: true,
      trimBlocks: true,
    },

    // Use Nunjucks as primary template engine per research.md
    // GOV.UK plugin uses Nunjucks for all layouts
  };
}
